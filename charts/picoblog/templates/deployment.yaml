apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "picoblog.fullname" . }}
  labels:
    {{- include "picoblog.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  automountServiceAccountToken: false
  selector:
    matchLabels:
      {{- include "picoblog.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "picoblog.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: tempfs
          emptyDir:
            sizeLimit: 64Mi
        - name: picoblog-nfs
          nfs:
          {{- toYaml .Values.nfs | nindent 12}}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- include "helpers.list-env-variables" . | indent 12 }}
          volumeMounts:
            - mountPath: /data
              name: picoblog-nfs
              readOnly: true
            - mountPath: /tmp
              name: tempfs
            {{- if .Values.env.PASSWORD }}
            - mountPath: /config
              name: picoblog-config
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - ls
              - /data
            initialDelaySeconds: 60
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: picoblog-config
      spec:
        accessModes: ["ReadWriteMany"]
        resources:
          requests:
            storage: 64Mi
          limits:
            storage: 128Mi
